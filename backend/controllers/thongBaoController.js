import pool from "../config/db.js";

/**
 * üìò T·∫°o th√¥ng b√°o (Admin)
 */
export const createThongBao = async (req, res) => {
  try {
    const {
      tieu_de,
      noi_dung,
      nguoi_gui,
      doi_tuong,
      ma_doi_tuong,
      tep_dinh_kem,
      trang_thai,
    } = req.body;

    await pool.query(
      `
      INSERT INTO thong_bao (tieu_de, noi_dung, nguoi_gui, doi_tuong, ma_doi_tuong, tep_dinh_kem, trang_thai)
      VALUES (?, ?, ?, ?, ?, ?, ?)
      `,
      [
        tieu_de,
        noi_dung,
        nguoi_gui,
        doi_tuong,
        ma_doi_tuong,
        tep_dinh_kem,
        trang_thai || "hienthi",
      ]
    );

    res.status(201).json({ message: "‚úÖ T·∫°o th√¥ng b√°o th√†nh c√¥ng" });
  } catch (err) {
    console.error("[createThongBao]", err);
    res.status(500).json({ error: "L·ªói khi t·∫°o th√¥ng b√°o" });
  }
};

/**
 * üì¢ L·∫•y th√¥ng b√°o d√†nh cho sinh vi√™n hi·ªán t·∫°i
 * G·ªìm:
 * - Th√¥ng b√°o to√†n tr∆∞·ªùng (tatca)
 * - Th√¥ng b√°o theo l·ªõp (lop + ma_lop)
 * - Th√¥ng b√°o c√° nh√¢n (sinhvien + ma_sinh_vien)
 */
export const getThongBaoByUser = async (req, res) => {
  try {
    const userId = req.user.id;

    // L·∫•y m√£ sinh vi√™n + m√£ l·ªõp c·ªßa ng∆∞·ªùi d√πng
    const [svRows] = await pool.query(
      "SELECT ma_sinh_vien, ma_lop FROM sinh_vien WHERE id_tai_khoan = ?",
      [userId]
    );

    if (svRows.length === 0)
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y sinh vi√™n." });

    const { ma_sinh_vien, ma_lop } = svRows[0];

    // Truy xu·∫•t t·∫•t c·∫£ th√¥ng b√°o li√™n quan
    const [rows] = await pool.query(
      `
      SELECT * FROM thong_bao
      WHERE trang_thai = 'hienthi'
        AND (
          doi_tuong = 'tatca'
          OR (doi_tuong = 'lop' AND ma_doi_tuong = ?)
          OR (doi_tuong = 'sinhvien' AND ma_doi_tuong = ?)
        )
      ORDER BY ngay_gui DESC
      `,
      [ma_lop, ma_sinh_vien]
    );

    res.json({ data: rows });
  } catch (err) {
    console.error("[getThongBaoByUser]", err);
    res.status(500).json({ error: "L·ªói khi l·∫•y danh s√°ch th√¥ng b√°o" });
  }
};

/**
 * üìò L·∫•y to√†n b·ªô th√¥ng b√°o (Admin)
 */
export const getAllThongBao = async (req, res) => {
  try {
    const [rows] = await pool.query(`
      SELECT id_thong_bao, tieu_de, noi_dung, nguoi_gui, doi_tuong, ma_doi_tuong,
             tep_dinh_kem, trang_thai, ngay_gui
      FROM thong_bao
      ORDER BY ngay_gui DESC
    `);
    res.json(rows); // ‚Üê tr·∫£ v·ªÅ m·∫£ng tr·ª±c ti·∫øp (FE ƒëang d√πng res.data)
  } catch (err) {
    console.error("[getAllThongBao]", err);
    res.status(500).json({ error: "L·ªói khi l·∫•y danh s√°ch to√†n b·ªô th√¥ng b√°o" });
  }
};

/**
 * üßë‚Äçüè´ Gi·∫£ng vi√™n g·ª≠i th√¥ng b√°o ƒë·∫øn l·ªõp h·ªçc ph·∫ßn m√¨nh d·∫°y
 */
export const createThongBaoGiangVien = async (req, res) => {
  try {
    const userId = req.user.id;
    const { ma_lop_hp, tieu_de, noi_dung, tep_dinh_kem } = req.body;

    if (!ma_lop_hp || !tieu_de || !noi_dung) {
      return res.status(400).json({ error: "Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc." });
    }

    // üîç L·∫•y m√£ gi·∫£ng vi√™n theo t√†i kho·∫£n
    const [gvRows] = await pool.query(
      "SELECT ma_giang_vien, ho_ten FROM giang_vien WHERE id_tai_khoan = ?",
      [userId]
    );

    if (gvRows.length === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y gi·∫£ng vi√™n." });
    }

    const { ma_giang_vien, ho_ten } = gvRows[0];

    // üîç Ki·ªÉm tra xem l·ªõp c√≥ thu·ªôc gi·∫£ng vi√™n n√†y kh√¥ng
    const [check] = await pool.query(
      "SELECT * FROM lop_hoc_phan WHERE ma_lop_hp = ? AND ma_giang_vien = ?",
      [ma_lop_hp, ma_giang_vien]
    );

    if (check.length === 0) {
      return res
        .status(403)
        .json({ error: "B·∫°n kh√¥ng c√≥ quy·ªÅn g·ª≠i th√¥ng b√°o cho l·ªõp n√†y." });
    }

    // ‚úÖ G·ª≠i th√¥ng b√°o
    await pool.query(
      `
      INSERT INTO thong_bao (tieu_de, noi_dung, nguoi_gui, doi_tuong, ma_doi_tuong, tep_dinh_kem, trang_thai)
      VALUES (?, ?, ?, 'lophocphan', ?, ?, 'hienthi')
      `,
      [tieu_de, noi_dung, ho_ten, ma_lop_hp, tep_dinh_kem || null]
    );

    res.status(201).json({ message: "‚úÖ G·ª≠i th√¥ng b√°o th√†nh c√¥ng." });
  } catch (err) {
    console.error("[createThongBaoGiangVien]", err);
    res.status(500).json({ error: "L·ªói khi gi·∫£ng vi√™n g·ª≠i th√¥ng b√°o." });
  }
};
