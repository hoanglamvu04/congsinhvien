import React, { useEffect, useState } from "react";
import axios from "axios";
import "../../styles/admin/admin.css";

const API_URL = process.env.REACT_APP_API_URL || "http://localhost:5000";

const ThoiKhoaBieuManager = () => {
  const [tkbs, setTkbs] = useState([]);
  const [keyword, setKeyword] = useState("");
  const [form, setForm] = useState({
    id_tkb: null,
    ma_lop_hp: "",
    tuan_hoc: "",
    ngay_hoc: "",
    thu_trong_tuan: "",
    tiet_bat_dau: "",
    tiet_ket_thuc: "",
    phong_hoc: "",
    trang_thai: "hoc",
  });

  const token = localStorage.getItem("token");

  const fetchData = async () => {
    try {
      const res = await axios.get(`${API_URL}/api/thoi-khoa-bieu`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setTkbs(res.data.data || []);
    } catch (err) {
      console.error(err);
      alert("‚ùå L·ªói khi t·∫£i danh s√°ch th·ªùi kh√≥a bi·ªÉu!");
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      if (form.id_tkb) {
        await axios.put(`${API_URL}/api/thoi-khoa-bieu/${form.id_tkb}`, form, {
          headers: { Authorization: `Bearer ${token}` },
        });
        alert("‚úÖ C·∫≠p nh·∫≠t bu·ªïi h·ªçc th√†nh c√¥ng!");
      } else {
        await axios.post(`${API_URL}/api/thoi-khoa-bieu`, form, {
          headers: { Authorization: `Bearer ${token}` },
        });
        alert("‚úÖ Th√™m bu·ªïi h·ªçc m·ªõi th√†nh c√¥ng!");
      }
      fetchData();
      setForm({
        id_tkb: null,
        ma_lop_hp: "",
        tuan_hoc: "",
        ngay_hoc: "",
        thu_trong_tuan: "",
        tiet_bat_dau: "",
        tiet_ket_thuc: "",
        phong_hoc: "",
        trang_thai: "hoc",
      });
    } catch {
      alert("‚ùå L·ªói khi l∆∞u th·ªùi kh√≥a bi·ªÉu!");
    }
  };

  const handleDelete = async (id) => {
    if (!window.confirm("X√°c nh·∫≠n x√≥a bu·ªïi h·ªçc n√†y?")) return;
    try {
      await axios.delete(`${API_URL}/api/thoi-khoa-bieu/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      alert("üóëÔ∏è X√≥a th√†nh c√¥ng!");
      fetchData();
    } catch {
      alert("‚ùå L·ªói khi x√≥a!");
    }
  };

  const filtered = tkbs.filter((t) =>
    [t.ten_mon, t.ma_lop_hp, t.phong_hoc, t.ten_giang_vien]
      .some((f) => f?.toLowerCase().includes(keyword.toLowerCase()))
  );

  return (
    <div className="admin-dashboard">
      <h1>üìÖ Qu·∫£n l√Ω th·ªùi kh√≥a bi·ªÉu</h1>

      <div className="filter-bar">
        <input
          type="text"
          placeholder="T√¨m m√¥n h·ªçc, gi·∫£ng vi√™n, ph√≤ng..."
          value={keyword}
          onChange={(e) => setKeyword(e.target.value)}
        />
      </div>

      <form className="create-form" onSubmit={handleSubmit}>
        <h3>‚ûï Th√™m / C·∫≠p nh·∫≠t bu·ªïi h·ªçc</h3>
        <input
          type="text"
          placeholder="M√£ l·ªõp h·ªçc ph·∫ßn"
          value={form.ma_lop_hp}
          onChange={(e) => setForm({ ...form, ma_lop_hp: e.target.value })}
        />
        <input
          type="text"
          placeholder="Tu·∫ßn h·ªçc"
          value={form.tuan_hoc}
          onChange={(e) => setForm({ ...form, tuan_hoc: e.target.value })}
        />
        <input
          type="date"
          value={form.ngay_hoc}
          onChange={(e) => setForm({ ...form, ngay_hoc: e.target.value })}
        />
        <input
          type="text"
          placeholder="Th·ª© trong tu·∫ßn"
          value={form.thu_trong_tuan}
          onChange={(e) => setForm({ ...form, thu_trong_tuan: e.target.value })}
        />
        <input
          type="number"
          placeholder="Ti·∫øt b·∫Øt ƒë·∫ßu"
          value={form.tiet_bat_dau}
          onChange={(e) => setForm({ ...form, tiet_bat_dau: e.target.value })}
        />
        <input
          type="number"
          placeholder="Ti·∫øt k·∫øt th√∫c"
          value={form.tiet_ket_thuc}
          onChange={(e) => setForm({ ...form, tiet_ket_thuc: e.target.value })}
        />
        <input
          type="text"
          placeholder="Ph√≤ng h·ªçc"
          value={form.phong_hoc}
          onChange={(e) => setForm({ ...form, phong_hoc: e.target.value })}
        />
        <select
          value={form.trang_thai}
          onChange={(e) => setForm({ ...form, trang_thai: e.target.value })}
        >
          <option value="hoc">ƒêang h·ªçc</option>
          <option value="nghi">Ngh·ªâ</option>
          <option value="thi">Thi</option>
        </select>
        <button type="submit">üíæ L∆∞u</button>
      </form>

      <div className="table-container">
        <table className="data-table">
          <thead>
            <tr>
              <th>M√£ l·ªõp HP</th>
              <th>M√¥n h·ªçc</th>
              <th>Gi·∫£ng vi√™n</th>
              <th>Tu·∫ßn</th>
              <th>Ng√†y h·ªçc</th>
              <th>Th·ª©</th>
              <th>Ti·∫øt</th>
              <th>Ph√≤ng</th>
              <th>Tr·∫°ng th√°i</th>
              <th>Thao t√°c</th>
            </tr>
          </thead>
          <tbody>
            {filtered.length === 0 ? (
              <tr>
                <td colSpan="10">Kh√¥ng c√≥ d·ªØ li·ªáu</td>
              </tr>
            ) : (
              filtered.map((t) => (
                <tr key={t.id_tkb}>
                  <td>{t.ma_lop_hp}</td>
                  <td>{t.ten_mon}</td>
                  <td>{t.ten_giang_vien}</td>
                  <td>{t.tuan_hoc}</td>
                  <td>{t.ngay_hoc?.split("T")[0]}</td>
                  <td>{t.thu_trong_tuan}</td>
                  <td>
                    {t.tiet_bat_dau}-{t.tiet_ket_thuc}
                  </td>
                  <td>{t.phong_hoc}</td>
                  <td>{t.trang_thai}</td>
                  <td>
                    <button onClick={() => setForm(t)}>‚úèÔ∏è</button>
                    <button onClick={() => handleDelete(t.id_tkb)}>üóëÔ∏è</button>
                  </td>
                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default ThoiKhoaBieuManager;
