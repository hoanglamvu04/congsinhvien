import React, { useEffect, useState } from "react";
import axios from "axios";
import "../../styles/admin/admin.css";

const API_URL = process.env.REACT_APP_API_URL || "http://localhost:5000";

const GiaoDichManager = () => {
  const [giaoDichList, setGiaoDichList] = useState([]);
  const [keyword, setKeyword] = useState("");
  const [loading, setLoading] = useState(false);
  const [form, setForm] = useState({
    id_hoc_phi: "",
    so_tien: "",
    phuong_thuc: "",
  });
  const [editing, setEditing] = useState(null);
  const token = localStorage.getItem("token");

  // üîÑ L·∫•y danh s√°ch giao d·ªãch
  const fetchGiaoDich = async () => {
    try {
      setLoading(true);
      const res = await axios.get(`${API_URL}/api/giaodich`, {
        headers: { Authorization: `Bearer ${token}` },
        params: keyword ? { q: keyword } : {},
      });
      setGiaoDichList(res.data.data || []);
    } catch (err) {
      console.error(err);
      alert("‚ùå L·ªói khi t·∫£i danh s√°ch giao d·ªãch!");
    } finally {
      setLoading(false);
    }
  };

  // üß≠ Load d·ªØ li·ªáu ban ƒë·∫ßu & khi t√¨m ki·∫øm
  useEffect(() => {
    fetchGiaoDich();
  }, []);

  useEffect(() => {
    fetchGiaoDich();
  }, [keyword]);

  // ‚ûï Th√™m giao d·ªãch (SV n·ªôp h·ªçc ph√≠)
  const handleSubmit = async (e) => {
    e.preventDefault();
    const { id_hoc_phi, so_tien, phuong_thuc } = form;
    if (!id_hoc_phi || !so_tien || !phuong_thuc)
      return alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªß th√¥ng tin giao d·ªãch!");

    try {
      await axios.post(`${API_URL}/api/giaodich`, form, {
        headers: { Authorization: `Bearer ${token}` },
      });
      alert("‚úÖ T·∫°o giao d·ªãch th√†nh c√¥ng (ƒëang ch·ªù duy·ªát)");
      setForm({ id_hoc_phi: "", so_tien: "", phuong_thuc: "" });
      fetchGiaoDich();
    } catch (err) {
      console.error(err);
      alert(err.response?.data?.error || "‚ùå L·ªói khi t·∫°o giao d·ªãch!");
    }
  };

  // ‚úèÔ∏è Duy·ªát giao d·ªãch (Admin)
  const handleApprove = async (id, status) => {
    if (!window.confirm(`X√°c nh·∫≠n c·∫≠p nh·∫≠t giao d·ªãch #${id} th√†nh ${status}?`))
      return;
    try {
      await axios.put(
        `${API_URL}/api/giaodich`,
        { id_giao_dich: id, trang_thai: status },
        { headers: { Authorization: `Bearer ${token}` } }
      );
      alert("‚úÖ C·∫≠p nh·∫≠t giao d·ªãch th√†nh c√¥ng!");
      fetchGiaoDich();
    } catch (err) {
      console.error(err);
      alert("‚ùå L·ªói khi c·∫≠p nh·∫≠t giao d·ªãch!");
    }
  };

  // üóëÔ∏è X√≥a giao d·ªãch (Admin)
  const handleDelete = async (id) => {
    if (!window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a giao d·ªãch #${id}?`)) return;
    try {
      await axios.delete(`${API_URL}/api/giaodich/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      alert("‚úÖ ƒê√£ x√≥a giao d·ªãch!");
      fetchGiaoDich();
    } catch (err) {
      console.error(err);
      alert("‚ùå L·ªói khi x√≥a giao d·ªãch!");
    }
  };

  // üí∞ Format ti·ªÅn VND
  const formatCurrency = (num) => {
    if (!num) return "0";
    return Number(num).toLocaleString("vi-VN");
  };

  return (
    <div className="admin-dashboard">
      <h1>üí≥ Qu·∫£n l√Ω giao d·ªãch</h1>

      {/* üîç Thanh t√¨m ki·∫øm */}
      <div className="filter-bar">
        <input
          type="text"
          placeholder="Nh·∫≠p m√£ sinh vi√™n, h·ªçc k·ª≥ ho·∫∑c tr·∫°ng th√°i..."
          value={keyword}
          onChange={(e) => setKeyword(e.target.value)}
        />
      </div>

      {/* üß© Form th√™m giao d·ªãch */}
      <form className="create-form" onSubmit={handleSubmit}>
        <h3>‚ûï T·∫°o giao d·ªãch m·ªõi</h3>
        <input
          type="text"
          placeholder="ID h·ªçc ph√≠ (id_hoc_phi)"
          value={form.id_hoc_phi}
          onChange={(e) => setForm({ ...form, id_hoc_phi: e.target.value })}
        />
        <input
          type="number"
          placeholder="S·ªë ti·ªÅn n·ªôp"
          value={form.so_tien}
          onChange={(e) => setForm({ ...form, so_tien: e.target.value })}
        />
        <input
          type="text"
          placeholder="Ph∆∞∆°ng th·ª©c (chuy·ªÉn kho·∫£n / ti·ªÅn m·∫∑t)"
          value={form.phuong_thuc}
          onChange={(e) => setForm({ ...form, phuong_thuc: e.target.value })}
        />
        <button type="submit">T·∫°o giao d·ªãch</button>
      </form>

      {/* üìã B·∫£ng danh s√°ch */}
      <div className="table-container">
        {loading ? (
          <p>ƒêang t·∫£i...</p>
        ) : (
          <table className="data-table">
            <thead>
              <tr>
                <th>ID</th>
                <th>M√£ SV</th>
                <th>H·ªçc k·ª≥</th>
                <th>S·ªë ti·ªÅn</th>
                <th>Ph∆∞∆°ng th·ª©c</th>
                <th>Ng√†y GD</th>
                <th>Tr·∫°ng th√°i</th>
                <th>Thao t√°c</th>
              </tr>
            </thead>
            <tbody>
              {giaoDichList.length === 0 ? (
                <tr>
                  <td colSpan="8">Kh√¥ng c√≥ d·ªØ li·ªáu</td>
                </tr>
              ) : (
                giaoDichList.map((item) => (
                  <tr key={item.id_giao_dich}>
                    <td>{item.id_giao_dich}</td>
                    <td>{item.ma_sinh_vien}</td>
                    <td>{item.ten_hoc_ky}</td>
                    <td>{formatCurrency(item.so_tien)}</td>
                    <td>{item.phuong_thuc}</td>
                    <td>
                      {new Date(item.ngay_giao_dich).toLocaleDateString("vi-VN")}
                    </td>
                    <td>
                      <span
                        style={{
                          color:
                            item.trang_thai === "da_duyet"
                              ? "green"
                              : item.trang_thai === "huy"
                              ? "red"
                              : "orange",
                          fontWeight: "600",
                        }}
                      >
                        {item.trang_thai}
                      </span>
                    </td>
                    <td>
                      {item.trang_thai === "cho_duyet" && (
                        <>
                          <button
                            onClick={() =>
                              handleApprove(item.id_giao_dich, "da_duyet")
                            }
                          >
                            ‚úÖ
                          </button>
                          <button
                            onClick={() =>
                              handleApprove(item.id_giao_dich, "huy")
                            }
                          >
                            ‚ùå
                          </button>
                        </>
                      )}
                      <button onClick={() => handleDelete(item.id_giao_dich)}>
                        üóëÔ∏è
                      </button>
                    </td>
                  </tr>
                ))
              )}
            </tbody>
          </table>
        )}
      </div>
    </div>
  );
};

export default GiaoDichManager;
    