import pool from "../config/db.js";

// üìò Admin ho·∫∑c sinh vi√™n xem to√†n b·ªô th·ªùi kh√≥a bi·ªÉu (t√πy quy·ªÅn)
export const getAllTkb = async (req, res) => {
  try {
    const { keyword } = req.query;
    const search = `%${keyword || ""}%`;

    const [rows] = await pool.query(
      `
      SELECT tkb.*, mh.ten_mon, gv.ho_ten AS ten_giang_vien, lhp.ma_lop_hp
      FROM thoi_khoa_bieu tkb
      LEFT JOIN lop_hoc_phan lhp ON tkb.ma_lop_hp = lhp.ma_lop_hp
      LEFT JOIN mon_hoc mh ON lhp.ma_mon = mh.ma_mon
      LEFT JOIN giang_vien gv ON lhp.ma_giang_vien = gv.ma_giang_vien
      WHERE mh.ten_mon LIKE ? OR gv.ho_ten LIKE ? OR lhp.ma_lop_hp LIKE ? OR tkb.phong_hoc LIKE ?
      ORDER BY tkb.ngay_hoc ASC, tkb.tiet_bat_dau ASC
      `,
      [search, search, search, search]
    );
    res.json({ data: rows });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "L·ªói khi l·∫•y th·ªùi kh√≥a bi·ªÉu" });
  }
};
// üìò Sinh vi√™n xem l·ªãch h·ªçc c·ªßa ch√≠nh m√¨nh
export const getTkbBySinhVien = async (req, res) => {
  try {
    const userId = req.user.id; // id_tai_khoan ƒë∆∞·ª£c decode t·ª´ token
    // L·∫•y m√£ sinh vi√™n t∆∞∆°ng ·ª©ng v·ªõi t√†i kho·∫£n
    const [svRows] = await pool.query(
      "SELECT ma_sinh_vien FROM sinh_vien WHERE id_tai_khoan = ?",
      [userId]
    );

    if (svRows.length === 0)
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y sinh vi√™n." });

    const ma_sinh_vien = svRows[0].ma_sinh_vien;

    // Truy xu·∫•t l·ªãch h·ªçc c·ªßa sinh vi√™n d·ª±a v√†o c√°c l·ªõp h·ªçc ph·∫ßn ƒë√£ ƒëƒÉng k√Ω
    const [rows] = await pool.query(
      `
      SELECT tkb.*, mh.ten_mon, gv.ho_ten AS ten_giang_vien, lhp.ma_lop_hp
      FROM thoi_khoa_bieu tkb
      JOIN lop_hoc_phan lhp ON tkb.ma_lop_hp = lhp.ma_lop_hp
      JOIN mon_hoc mh ON lhp.ma_mon = mh.ma_mon
      JOIN giang_vien gv ON lhp.ma_giang_vien = gv.ma_giang_vien
      JOIN dang_ky_mon dk ON dk.ma_lop_hp = lhp.ma_lop_hp
      WHERE dk.ma_sinh_vien = ?
      ORDER BY tkb.ngay_hoc ASC, tkb.tiet_bat_dau ASC
      `,
      [ma_sinh_vien]
    );

    res.json({ data: rows });
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y th·ªùi kh√≥a bi·ªÉu sinh vi√™n:", error);
    res.status(500).json({ error: "L·ªói khi l·∫•y th·ªùi kh√≥a bi·ªÉu c·ªßa sinh vi√™n." });
  }
};

// ‚ûï Admin th√™m bu·ªïi h·ªçc
export const createTkb = async (req, res) => {
  try {
    const {
      ma_lop_hp,
      tuan_hoc,
      ngay_hoc,
      thu_trong_tuan,
      tiet_bat_dau,
      tiet_ket_thuc,
      phong_hoc,
      trang_thai,
    } = req.body;

    await pool.query(
      `
      INSERT INTO thoi_khoa_bieu 
      (ma_lop_hp, tuan_hoc, ngay_hoc, thu_trong_tuan, tiet_bat_dau, tiet_ket_thuc, phong_hoc, trang_thai)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `,
      [
        ma_lop_hp,
        tuan_hoc,
        ngay_hoc,
        thu_trong_tuan,
        tiet_bat_dau,
        tiet_ket_thuc,
        phong_hoc,
        trang_thai || "hoc",
      ]
    );

    res.status(201).json({ message: "‚úÖ Th√™m bu·ªïi h·ªçc th√†nh c√¥ng" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "L·ªói khi th√™m th·ªùi kh√≥a bi·ªÉu" });
  }
};

// ‚úèÔ∏è C·∫≠p nh·∫≠t bu·ªïi h·ªçc
export const updateTkb = async (req, res) => {
  try {
    const { id_tkb } = req.params;
    const {
      ma_lop_hp,
      tuan_hoc,
      ngay_hoc,
      thu_trong_tuan,
      tiet_bat_dau,
      tiet_ket_thuc,
      phong_hoc,
      trang_thai,
    } = req.body;

    await pool.query(
      `
      UPDATE thoi_khoa_bieu 
      SET ma_lop_hp=?, tuan_hoc=?, ngay_hoc=?, thu_trong_tuan=?, tiet_bat_dau=?, tiet_ket_thuc=?, phong_hoc=?, trang_thai=?
      WHERE id_tkb=?
      `,
      [
        ma_lop_hp,
        tuan_hoc,
        ngay_hoc,
        thu_trong_tuan,
        tiet_bat_dau,
        tiet_ket_thuc,
        phong_hoc,
        trang_thai,
        id_tkb,
      ]
    );

    res.json({ message: "‚úÖ C·∫≠p nh·∫≠t th·ªùi kh√≥a bi·ªÉu th√†nh c√¥ng" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "L·ªói khi c·∫≠p nh·∫≠t th·ªùi kh√≥a bi·ªÉu" });
  }
};

// üóëÔ∏è X√≥a bu·ªïi h·ªçc
export const deleteTkb = async (req, res) => {
  try {
    const { id_tkb } = req.params;
    await pool.query("DELETE FROM thoi_khoa_bieu WHERE id_tkb = ?", [id_tkb]);
    res.json({ message: "üóëÔ∏è X√≥a bu·ªïi h·ªçc th√†nh c√¥ng" });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "L·ªói khi x√≥a bu·ªïi h·ªçc" });
  }
};
